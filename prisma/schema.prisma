// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    Int      @id @default(autoincrement())
  name                  String
  email                 String   @unique
  profile_image         String?
  profile_image_public_id String?
  is_online             Boolean  @default(false)
  last_seen             DateTime?
  created_at            DateTime @default(now())
  updated_at            DateTime @updatedAt

  // Relations
  sent_messages         Message[] @relation("SentMessages")
  chats_as_pet_owner    Chat[]    @relation("PetOwnerChats")
  chats_as_pet_sitter   Chat[]    @relation("PetSitterChats")
  user_chat_settings   UserChatSettings[]

  @@map("users")
}

model Chat {
  id              Int      @id @default(autoincrement())
  pet_owner_id    Int
  pet_sitter_id   Int
  last_message_id Int?
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  // Relations
  pet_owner       User              @relation("PetOwnerChats", fields: [pet_owner_id], references: [id])
  pet_sitter      User              @relation("PetSitterChats", fields: [pet_sitter_id], references: [id])
  messages        Message[]
  user_chat_settings UserChatSettings[]

  @@map("chats")
}

model Message {
  id          Int      @id @default(autoincrement())
  chat_id     Int
  sender_id   Int
  content     String?
  message_type String  @default("TEXT")
  image_url   String?
  is_read     Boolean  @default(false)
  timestamp   DateTime @default(now())

  // Relations
  chat        Chat @relation(fields: [chat_id], references: [id])
  sender      User @relation("SentMessages", fields: [sender_id], references: [id])

  @@map("messages")
}

model UserChatSettings {
  user_id        Int
  chat_id        Int
  unread_count   Int      @default(0)
  is_hidden      Boolean  @default(false)
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  // Relations
  user           User @relation(fields: [user_id], references: [id])
  chat           Chat @relation(fields: [chat_id], references: [id])

  @@id([user_id, chat_id])
  @@map("user_chat_settings")
}